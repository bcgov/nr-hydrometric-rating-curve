### BUILDER IMAGE ###
# syntax=docker/dockerfile:1
FROM python:3.13-slim AS builder
WORKDIR /app

# set environment variables
ENV LANG=C.UTF-8
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# use python venv to copy to the app image later
ENV PATH="/venv/bin:$PATH"

RUN apt-get update --no-install-recommends && \
    apt-get install -y gcc
RUN python -m venv /venv

# install requirements
COPY . .
RUN pip install .
RUN python manage.py collectstatic


### APP IMAGE ###
FROM nginx:1 AS deploy
WORKDIR /app

# copy project
COPY --from=builder /app/staticfiles /static
COPY --from=builder /app/nginx.conf /app/nginx.conf
COPY start_nginx.sh /app/start_nginx.sh
## add permissions for nginx user
RUN chown -R nginx:nginx /app && chmod -R 777 /app && \
    chown -R nginx:nginx /var/cache/nginx && chmod -R 777 /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && chmod -R 777 /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d && chmod -R 777 /etc/nginx/conf.d && \
    chown -R nginx:nginx /etc/nginx/nginx.conf && chmod -R 777 /etc/nginx/nginx.conf
RUN touch /var/run/nginx.pid && \
    chown -R nginx:nginx /var/run/nginx.pid && chmod -R 777 /var/run/nginx.pid

USER nginx


# healthcheck
HEALTHCHECK --interval=60s --timeout=10s \
    CMD service nginx status

CMD ["sh", "-c", "/app/start_nginx.sh"]
