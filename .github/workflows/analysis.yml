name: Analysis

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, converted_to_draft]
  schedule:
    - cron: "0 11 * * 0" # 3 AM PST = 12 PM UDT, runs sundays
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  codeql:
    name: CodeQL Security Scan
    if: ${{ ! github.event.pull_request.draft }}
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript"

  # https://github.com/marketplace/actions/aqua-security-trivy
  trivy:
    name: Trivy Security Scan
    if: ${{ ! github.event.pull_request.draft }}
    runs-on: ubuntu-22.04
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          format: "sarif"
          output: "trivy-results.sarif"
          ignore-unfixed: true
          scan-type: "fs"
          scanners: "vuln,secret,config"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

  tests:
    name: Django Tests
    if: ${{ ! github.event.pull_request.draft }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: frontend
    env:
      DEBUG: "False"
      ALLOWED_HOSTS: 'localhost,'
      CSRF_TRUSTED_ORIGINS: 'http://localhost,https://localhost'
      SECRET_KEY: 'temporary_debug_key'
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
           python-version: "3.12"
      - name: Install requirements
        run: |
            pip install .
      - name: Run tests
        run: |
            python manage.py test
            
  results:
    name: Analysis Results
    # needs: [codeql, trivy, tests] # Restore trivy when it's working again
    needs: [codeql, tests]
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Workflow completed successfully!"
